#
# Copyright (c) 2000-2014 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

#
# XXX ONLY RUN THIS INSTALL ON A LINUX TESTBED NODE!
#
# Trivial. These things just need to be installed into the right place
# on a testbed node before cutting an image.
#
#
SRCDIR		= @srcdir@
TESTBED_SRCDIR	= @top_srcdir@
OBJDIR		= @top_builddir@
SUBDIR		= $(subst $(TESTBED_SRCDIR)/,,$(SRCDIR))

include $(OBJDIR)/Makeconf

SCRIPTS		= sethostname.dhclient

#
# Force dependencies on the scripts so that they will be rerun through
# configure if the .in file is changed.
# 
all:	supfile $(SCRIPTS)

include $(TESTBED_SRCDIR)/GNUmakerules

SYSETCDIR	?= $(DESTDIR)/etc
ETCDIR		?= $(DESTDIR)$(CLIENT_ETCDIR)
BINDIR		?= $(DESTDIR)$(CLIENT_BINDIR)
VARDIR		?= $(DESTDIR)$(CLIENT_VARDIR)
VSDIR		?= $(BINDIR)/vserver
LBINDIR		?= $(DESTDIR)/usr/local/bin
RCDIR		?= $(SYSETCDIR)/rc.d
INSTALL		?= /usr/bin/install -c 
COMMON		?= $(SRCDIR)/../common
DEFRUNLVLDIR	?= $(RCDIR)/rc3.d
ISMFS		= $(ETCDIR)/ismfs

# group to use for directories (dir-install)
DIRGROUP	?= root

# without DESTDIR, used for the value of symlinks
RRCDIR		?= /etc/rc.d

destdircheck:
	@if [ -z "$(DESTDIR)" ]; then \
	    echo "You must define DESTDIR for this target!"; \
	    false; \
	fi
	@if [ "$(DESTDIR)" = "/" ]; then \
	    echo "DESTDIR is '/', really really bad idea!"; \
	    false; \
	fi

subboss-install:	subboss-common-install etc-install \
			sup-install script-install bin-install
	@echo "Remember to install the PEM files if necessary"

install client-install:	common-install etc-install \
			sup-install script-install bin-install vserver-install
	@echo "Remember to install the PEM files if necessary"

mfs-install:	destdircheck common-install etc-install \
			script-install bin-install
	rm -f $(BINDIR)/rc/rc.mkelab
	rm -f $(RCDIR)/elvind.sh
	@if [ ! -f $(ISMFS) ]; then \
	    echo >$(ISMFS) "This file indicates its the MFS. DO NOT DELETE!"; \
	fi

frisbee-mfs-install:	destdircheck
	$(INSTALL) -m 644 $(SRCDIR)/frisbee/rc.local $(SYSETCDIR)/rc.local
	$(INSTALL) -m 755 $(SRCDIR)/dhclient-exit-hooks \
			$(SYSETCDIR)/dhclient-exit-hooks
	$(INSTALL) -m 755 $(SRCDIR)/dhclient-enter-hooks \
			$(SYSETCDIR)/dhclient-enter-hooks
	#@if [ -r $(SRCDIR)/master.passwd ]; then \
	#    $(INSTALL) -m 600 $(SRCDIR)/master.passwd $(SYSETCDIR); \
	#    pwd_mkdb -d $(SYSETCDIR) $(SYSETCDIR)/master.passwd; \
	#    if [ ! -e $(DESTDIR)/bin/csh ]; then \
	#	ln $(DESTDIR)/bin/sh $(DESTDIR)/bin/csh; \
	#    fi \
	#fi
	#@if [ -r $(SRCDIR)/group ]; then \
	#    $(INSTALL) -m 644 $(SRCDIR)/group $(SYSETCDIR); \
	#fi
	(cd ../../tools/binoffset; $(MAKE) DESTDIR=$(DESTDIR) client-install)
	$(INSTALL) -m 755 $(SRCDIR)/control_interface $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/rc.frisbee $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/rc.ipod $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/slicefix $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/freebsd_to_linux_disk $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/check_disklabel $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/linux_slicefix $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/extract_kernel_info $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/mount_bsd_slice $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/extract_initrd_info $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/extract_image_info $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 $(SRCDIR)/get_edd_map $(SYSETCDIR)/testbed
	$(INSTALL) -m 755 -s ../tmcc-nossl $(SYSETCDIR)/testbed/tmcc
	$(INSTALL) -m 755 -s ../findif $(SYSETCDIR)/testbed
	rm -f $(BINDIR)/rc/rc.mkelab
	rm -f $(RCDIR)/elvind.sh

cdboot-install:	destdircheck common-install etc-install \
			script-install bin-install
	$(INSTALL) -m 755 $(SRCDIR)/cdboot/rc.cdboot $(BINDIR)/rc/rc.cdboot
	$(INSTALL) -m 755 $(SRCDIR)/rc.frisbee $(BINDIR)/rc/rc.frisbee
	$(INSTALL) -m 755 $(SRCDIR)/slicefix $(BINDIR)/slicefix
	#cp $(SRCDIR)/cdboot/fstab $(SYSETCDIR)/fstab
	#cp $(SRCDIR)/cdboot/fstab.lbs $(SYSETCDIR)/fstab.lbs
	#$(INSTALL) -m 755 -o root -g wheel -d $(DESTDIR)/boot
	#cp $(SRCDIR)/cdboot/loader.conf $(DESTDIR)/boot/loader.conf
	#cp $(SRCDIR)/cdboot/loader.rc.lbs $(DESTDIR)/boot/loader.rc.lbs
	#cp $(SRCDIR)/cdboot/.profile $(DESTDIR)/.profile
	echo >$(ISMFS) "This file indicates its the MFS. DO NOT DELETE!"
	(cd ../../sensors/slothd; $(MAKE) DESTDIR=$(DESTDIR) client-install)
	(cd ../../pxe; $(MAKE) DESTDIR=$(DESTDIR) client-install)
	(cd ../../os; $(MAKE) DESTDIR=$(DESTDIR) cdboot-install)
	(cd ../../cdrom;$(MAKE) DESTDIR=$(DESTDIR) client-install)
	(cd ../../tools/teachswitch; $(MAKE) DESTDIR=$(DESTDIR) client-install)
	$(INSTALL) -m 755 $(SRCDIR)/../../install/newclient $(BINDIR)/newclient
	#$(INSTALL) -m 755 -o root -g wheel -d $(DESTDIR)/users
	#$(INSTALL) -m 755 -o root -g wheel -d $(DESTDIR)/proj
	#$(INSTALL) -m 755 -o root -g wheel -d $(DESTDIR)/groups
	#$(INSTALL) -m 755 -o root -g wheel -d $(DESTDIR)/share

simple-install:	common-install script-install bin-install

dir-install:
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(SYSETCDIR)
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(SYSETCDIR)/sysconfig
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(SYSETCDIR)/sysconfig/network-scripts
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(RCDIR)
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(RCDIR)/init.d
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(RCDIR)/rc1.d
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(DEFRUNLVLDIR)
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(RCDIR)/rc0.d
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(RCDIR)/rc6.d
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(ETCDIR)
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(BINDIR)
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(RCDIR)
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(VARDIR)
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(VARDIR)/db
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(VARDIR)/jails
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(VARDIR)/logs
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(VARDIR)/sup
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(VARDIR)/boot
	-rm -rf $(DESTDIR)/etc/testbed
	ln -s emulab $(DESTDIR)/etc/testbed
	-rm -rf $(DESTDIR)/usr/local/etc/testbed
	ln -s emulab $(DESTDIR)/usr/local/etc/testbed

common-install:	dir-install
	(cd ../common; $(MAKE) DESTDIR=$(DESTDIR) local-install)

subboss-common-install:	dir-install
	(cd ../common; $(MAKE) DESTDIR=$(DESTDIR) subboss-local-install)

sup-install:	dir-install supfile
	$(INSTALL) -m 755 ./supfile $(ETCDIR)/supfile
	$(INSTALL) -m 750 -o root -g $(DIRGROUP) -d $(DESTDIR)/root/.cvsup
	$(INSTALL) -m 600 $(SRCDIR)/cvsup.auth $(DESTDIR)/root/.cvsup/auth

bin-install:	dir-install
	$(INSTALL) -m 755 ../tmcc-nossl$(EXE) $(BINDIR)/tmcc.bin$(EXE)
	$(INSTALL) -m 755 ../tmcc$(EXE) $(BINDIR)/tmcc-ssl.bin$(EXE)
	$(INSTALL) -m 755 ../findif$(EXE) $(BINDIR)/findif$(EXE)
	$(INSTALL) -m 755 ../dostype$(EXE) $(BINDIR)/dostype$(EXE)

etc-install:	dir-install sysetc-remove sysetc-install
	$(INSTALL) -m 644 $(SRCDIR)/group $(ETCDIR)/group
	$(INSTALL) -m 644 $(SRCDIR)/passwd $(ETCDIR)/passwd
	$(INSTALL) -m 600 $(SRCDIR)/shadow $(ETCDIR)/shadow
	$(INSTALL) -m 600 $(SRCDIR)/gshadow $(ETCDIR)/gshadow
	$(INSTALL) -m 644 $(SRCDIR)/hosts $(ETCDIR)/hosts

sysetc-install:	dir-install ifcfgs
	$(INSTALL) -m 755 $(SRCDIR)/dhclient-enter-hooks $(SYSETCDIR)/dhclient-enter-hooks
	$(INSTALL) -m 755 $(SRCDIR)/dhclient-exit-hooks $(SYSETCDIR)/dhclient-exit-hooks
	$(INSTALL) -m 644 $(SRCDIR)/modules.conf $(SYSETCDIR)/modules.conf
	$(INSTALL) -m 644 $(SRCDIR)/ifcfg-eth99 $(SYSETCDIR)/sysconfig/network-scripts
	$(INSTALL) -m 644 ifcfg-eth[0-9]* $(SYSETCDIR)/sysconfig/network-scripts
	$(INSTALL) -m 755 $(SRCDIR)/ntpd.sh $(RCDIR)/init.d/ntpd
	$(INSTALL) -m 755 $(SRCDIR)/testbed $(RCDIR)/init.d/testbed
	-ln -sf $(RRCDIR)/init.d/ntpd $(DEFRUNLVLDIR)/S58ntpd
	-ln -sf $(RRCDIR)/init.d/testbed $(DEFRUNLVLDIR)/S96testbed
	-ln -sf $(RRCDIR)/init.d/testbed $(RCDIR)/rc0.d/K12testbed
	-ln -sf $(RRCDIR)/init.d/testbed $(RCDIR)/rc1.d/K12testbed
	-ln -sf $(RRCDIR)/init.d/testbed $(RCDIR)/rc6.d/K12testbed
	$(INSTALL) -m 755 $(SRCDIR)/tbprepare $(RCDIR)/init.d/tbprepare
	-ln -sf $(RRCDIR)/init.d/tbprepare $(RCDIR)/rc0.d/K89tbprepare
	-ln -sf $(RRCDIR)/init.d/tbprepare $(RCDIR)/rc1.d/K89tbprepare
	-ln -sf $(RRCDIR)/init.d/tbprepare $(RCDIR)/rc6.d/K89tbprepare
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(SYSETCDIR)/cron.pend
	if [ -e $(SYSETCDIR)/cron.daily/slocate.cron ]; then \
		mv -f $(SYSETCDIR)/cron.daily/slocate.cron \
				$(SYSETCDIR)/cron.pend; \
	fi
	if [ -e $(SYSETCDIR)/cron.daily/makewhatis.cron ]; then \
		mv -f $(SYSETCDIR)/cron.daily/makewhatis.cron \
				$(SYSETCDIR)/cron.pend; \
	fi
	$(INSTALL) -m 755 $(SRCDIR)/rc.local $(RCDIR)/rc.local
	if [ "$(RCDIR)" != "$(SYSETCDIR)" ]; then \
	    ln -sf $(RRCDIR)/rc.local $(SYSETCDIR)/rc.local; \
        fi

sysetc-remove:
	-rm -f $(RCDIR)/*/S95anacron $(RCDIR)/*/K05anacron 

script-install:	dir-install $(SCRIPTS)
	$(INSTALL) -m 755 $(SRCDIR)/liblocsetup.pm $(BINDIR)/liblocsetup.pm
	$(INSTALL) -m 755 $(SRCDIR)/liblocstorage.pm $(BINDIR)/liblocstorage.pm
	$(INSTALL) -m 755 $(SRCDIR)/rc.ipod $(BINDIR)/rc/rc.ipod
	$(INSTALL) -m 755 $(SRCDIR)/rc.kname $(BINDIR)/rc/rc.kname
	$(INSTALL) -m 755 $(SRCDIR)/prepare $(BINDIR)/prepare
	$(INSTALL) -m 755 $(SRCDIR)/reboot_prepare $(BINDIR)/reboot_prepare
	$(INSTALL) -m 755 $(SRCDIR)/ixpboot $(BINDIR)/ixpboot
	$(INSTALL) -m 755 $(SRCDIR)/rc.ixp $(BINDIR)/rc/rc.ixp
	$(INSTALL) -m 755 ./sethostname.dhclient $(BINDIR)/sethostname.dhclient
	$(INSTALL) -m 755 $(SRCDIR)/rc.healthd $(BINDIR)/rc/rc.healthd
	$(INSTALL) -m 755 $(SRCDIR)/healthd.conf $(BINDIR)/healthd.conf
	$(INSTALL) -m 755 $(SRCDIR)/delaysetup $(BINDIR)/delaysetup
	$(INSTALL) -m 755 $(SRCDIR)/mkextrafs.pl $(BINDIR)/mkextrafs.pl
	$(INSTALL) -m 755 $(SRCDIR)/control_interface $(BINDIR)/control_interface
	$(INSTALL) -m 755 $(SRCDIR)/nodetype $(BINDIR)/nodetype
	$(INSTALL) -m 755 $(SRCDIR)/chipset.awk $(BINDIR)/chipset.awk
	$(INSTALL) -m 755 $(SRCDIR)/cpuspeed.awk $(BINDIR)/cpuspeed.awk
	$(INSTALL) -m 755 $(SRCDIR)/rc.mfs $(BINDIR)/rc/rc.mfs
	$(INSTALL) -m 755 $(SRCDIR)/control_interface $(BINDIR)/control_interface
	$(INSTALL) -m 755 $(SRCDIR)/rc.frisbee $(BINDIR)/rc/rc.frisbee
	$(INSTALL) -m 755 $(SRCDIR)/slicefix $(BINDIR)/slicefix
	$(INSTALL) -m 755 $(SRCDIR)/freebsd_to_linux_disk $(BINDIR)/freebsd_to_linux_disk
	$(INSTALL) -m 755 $(SRCDIR)/check_disklabel $(BINDIR)/check_disklabel
	$(INSTALL) -m 755 $(SRCDIR)/linux_slicefix $(BINDIR)
	$(INSTALL) -m 755 $(SRCDIR)/extract_kernel_info $(BINDIR)
	$(INSTALL) -m 755 $(SRCDIR)/extract_initrd_info $(BINDIR)
	$(INSTALL) -m 755 $(SRCDIR)/extract_image_info $(BINDIR)
	$(INSTALL) -m 755 $(SRCDIR)/mount_bsd_slice $(BINDIR)
	$(INSTALL) -m 755 $(SRCDIR)/get_edd_map $(BINDIR)
	$(INSTALL) -m 755 $(SRCDIR)/rc.linux $(BINDIR)/rc
	$(INSTALL) -m 755 $(SRCDIR)/fixup-fstab-swaps $(BINDIR)

sfs-install:
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(DESTDIR)/etc/sfs
	$(INSTALL) -m 755 $(SRCDIR)/sfs.sh $(RCDIR)/init.d/sfs
	-ln -sf $(RRCDIR)/init.d/nfs $(DEFRUNLVLDIR)/S20nfs
	-ln -sf $(RRCDIR)/init.d/sfs $(RCDIR)/rc6.d/K19sfs
	$(INSTALL) -m 644 $(SRCDIR)/exports $(ETCDIR)/exports
	$(INSTALL) -m 644 $(SRCDIR)/sfsrwsd_config $(ETCDIR)/sfs/sfsrwsd_config
	$(INSTALL) -m 644 $(SRCDIR)/sfssd_config $(ETCDIR)/sfs/sfssd_config
	$(INSTALL) -m 755 -o sfs -g sfs -d $(DESTDIR)/var/sfs
	$(INSTALL) -m 775 -o sfs -g sfs -d $(DESTDIR)/var/sfs/root
	$(INSTALL) -m 775 -o sfs -g sfs -d $(DESTDIR)/var/sfs/var
	$(INSTALL) -m 775 -o sfs -g sfs -d $(DESTDIR)/var/sfs/usr

# create ifcfg-eth? files
ifcfgs:	$(SRCDIR)/mkifcfgs $(SRCDIR)/ifcfg.template
	$(SRCDIR)/mkifcfgs $(SRCDIR)/ifcfg.template

vserver-install:	dir-install
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(VSDIR)
	$(INSTALL) -m 755 $(SRCDIR)/vserver/rc.invserver $(VSDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/vserver/vserver-cnet.sh $(VSDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/vserver/vserver-init.sh $(VSDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/vserver/vserver-rc.sh $(VSDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/mkvserver.pl $(BINDIR)/mkvserver.pl
	-ln -sf $(CLIENT_BINDIR)/mkvserver.pl $(BINDIR)/mkjail.pl

openvz-install:	dir-install
	$(INSTALL) -m 755 $(SRCDIR)/../common/vnodesetup $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../common/mkvnode.pl $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../common/libutil.pm $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../common/bootvnodes $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/libvnode.pm $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/openvz/libvnode_openvz.pm $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/openvz/vznetinit-elab.sh $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/vnodectl $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/openvz/create-image $(LBINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/openvz/mkimagecache $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/openvz/prunelvms $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/openvz/prunelvms.cron $(SYSETCDIR)/cron.daily
	echo "openvz" > $(ETCDIR)/genvmtype
	$(INSTALL) -m 755 $(SRCDIR)/openvz/vzmount-elab.sh $(BINDIR)/
	# No destdir in this symlink!
	-ln -sf $(CLIENT_BINDIR)/vzmount-elab.sh /etc/vz/conf/vps.mount
	$(INSTALL) -m 755 $(SRCDIR)/openvz/vzumount-elab.sh $(BINDIR)/
	# No destdir in this symlink!
	-ln -sf $(CLIENT_BINDIR)/vzumount-elab.sh /etc/vz/conf/vps.umount

xen-udev-install:
	@if [ -d "/etc/udev/rules.d" ]; then \
	    for f in $(SRCDIR)/xen/udev/*.rules; do \
		echo $(INSTALL) -m 644 $$f /etc/udev/rules.d/; \
		$(INSTALL) -m 644 $$f /etc/udev/rules.d/; \
	    done; \
	fi

xen-upstart-install:
	@if [ -d "/etc/init" ]; then \
	    for f in $(SRCDIR)/xen/init/*; do \
		echo $(INSTALL) -m 644 $$f /etc/init/; \
		$(INSTALL) -m 644 $$f /etc/init/; \
	    done; \
	fi

xen-install:	dir-install xen-udev-install xen-upstart-install
	$(INSTALL) -m 755 $(SRCDIR)/../common/vnodesetup $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../common/mkvnode.pl $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../common/bootvnodes $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../common/localize_image $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../common/libutil.pm $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/libvnode.pm $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/xen/libvnode_xen.pm $(BINDIR)/
	echo "xen" > $(ETCDIR)/genvmtype
	$(INSTALL) -m 755 $(SRCDIR)/xen/xenbridge-setup $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/xen/restorevm.pl $(BINDIR)/restorevm.pl
	$(INSTALL) -m 755 $(SRCDIR)/xen/capturevm.pl $(BINDIR)/capturevm.pl
	$(INSTALL) -m 755 $(SRCDIR)/xen/xend-config.sxp $(SYSETCDIR)/xen/
	$(INSTALL) -m 755 $(SRCDIR)/xen/xl.conf $(SYSETCDIR)/xen/
	$(INSTALL) -m 755 $(SRCDIR)/xen/30-emulab.conf $(SYSETCDIR)/sysctl.d/
	$(INSTALL) -m 755 $(SRCDIR)/xen/xen $(SYSETCDIR)/init.d/
	$(INSTALL) -m 755 $(SRCDIR)/xen/interfaces $(SYSETCDIR)/network/
	$(INSTALL) -m 755 $(SRCDIR)/xen/emulab-cnet.pl $(SYSETCDIR)/xen/scripts/
	$(INSTALL) -m 755 $(SRCDIR)/xen/emulab-enet.pl $(SYSETCDIR)/xen/scripts/
	$(INSTALL) -m 755 $(SRCDIR)/xen/vif-route-emulab $(SYSETCDIR)/xen/scripts/
	$(INSTALL) -m 755 $(SRCDIR)/xen/emulab-tun.pl $(SYSETCDIR)/xen/scripts/
	$(INSTALL) -m 755 $(SRCDIR)/xen/create-xen-image $(LBINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../../os/create-versioned-image $(LBINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/../../os/create-image $(LBINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/xen/mkimagecache $(BINDIR)/
	$(INSTALL) -m 755 -o root -g $(DIRGROUP) -d $(BINDIR)/grub
	$(INSTALL) -m 755 $(SRCDIR)/xen/pygrub $(BINDIR)/
	@if [ ! -e "/usr/lib/xen-default" -a -d "/usr/lib/xen-4.4" ]; then \
	    ln -sf xen-4.4 /usr/lib/xen-default; \
	fi
	$(INSTALL) -m 755 $(SRCDIR)/xen/GrubConf.py \
		/usr/lib/xen-default/lib/python/grub/

genirack-install:
	$(INSTALL) -m 755 $(SRCDIR)/xen/restorevm.pl $(BINDIR)/restorevm.pl
	$(INSTALL) -m 755 $(SRCDIR)/xen/capturevm.pl $(BINDIR)/capturevm.pl
	$(INSTALL) -m 755 $(SRCDIR)/xen/xenbridge-setup $(BINDIR)/
	$(INSTALL) -m 755 $(SRCDIR)/xen/xenbridge-setup-genirack $(SYSETCDIR)/xen/

OPENVZGUEST_TEMPLATE  = /vz.save/template/cache/emulab-default.tar.gz
OPENVZGUEST           = /vz/template/cache/emulab-default.tar.gz

openvz-guest: openvz-guest-unpack openvz-guest-install openvz-guest-pack

openvz-guest-unpack: $(OPENVZGUEST_TEMPLATE)
	-$(RM) -rf /tmp/guest
	mkdir /tmp/guest
	tar xzf $(OPENVZGUEST_TEMPLATE) -C /tmp/guest

openvz-guest-install: $(OPENVZGUEST_TEMPLATE)
	(cd $(OBJDIR) ; \
		$(MAKE) DESTDIR=/tmp/guest client-install)

openvz-guest-pack: $(OPENVZGUEST_TEMPLATE)
	tar czf $(OPENVZGUEST_TEMPLATE) -C /tmp/guest .
	-$(RM) -rf /tmp/guest
	@if [ -e "$(OPENVZGUEST)" ]; then \
		cp -fp $(OPENVZGUEST_TEMPLATE) $(OPENVZGUEST); \
	fi
